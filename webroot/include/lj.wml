# $Id$
# defines the <lj> tag for including recent LiveJournal entries

<:
use strict;
use XML::RSS;

# shortens a description, also removing HTML tags
sub shorten($) {
  my $str = $_[0];
  my $maxlen = 100;	# chars
  # convert <br /> tag to one space (it's at the end of every line)
  $str =~ s/<br \/>/ /g;
  # remove all the other tags
  $str =~ s/<.*?>//g;

  # truncate if necessary
  if( $str =~ /(^.{$maxlen}\S*)/ ) {
    $str = $1 . ' ...';
  }

  return $str;
}

# given an LJ-style date string, reprints in another format
sub reformatDate($) {
  my $date = $_[0];
  if( $date !~ /^\w+,\s+(\d+)\s+(\w+)\s+(\d+)\s+(\d+):(\d+):(\d+)\s+GMT/ ) {
    return "unrecognized date";
  }
  my ($mday, $monname, $year, $hour, $min, $sec) =
     ($1, $2, $3, $4, $5, $6);

  my %months = (
    'Jan' => 1,
    'Feb' => 2,
    'Mar' => 3,
    'Apr' => 4,
    'May' => 5,
    'Jun' => 6,
    'Jul' => 7,
    'Aug' => 8,
    'Sep' => 9,
    'Oct' => 10,
    'Nov' => 11,
    'Dec' => 12
  );

  return "$mday $monname $year";
}

sub lj($) {
  my $numitems = $_[0];
  my $rss = new XML::RSS;
  $rss->parsefile('/home/jlouder/public_html/lj.xml');

  my $output = '<dl>';

  foreach my $count ( 1 .. $numitems ) {
    my $item = (@{$rss->{'items'}})[$count-1];

    $output .= '<dt><tt>[' . reformatDate($item->{'pubDate'}) . ']</tt> ' .
               '<a href="' . $item->{'link'} . '">' .
               $item->{'title'} . "</a></dt>\n" .
               '<dd>' . shorten($item->{'description'}) . "</dd>\n";
  }

  $output .= '</dl>';
  return $output;
}
:>

<define-tag lj whitespace=delete>
  <preserve numposts />
  <set-var %attributes />
  <if <get-var numposts /> "" <set-var numposts=5 /> />
  <:= lj(<get-var numposts />); :>
  <restore numposts />
</define-tag>
